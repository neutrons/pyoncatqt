[project]
name = "pyoncatqt"
description = "Provide common GUI elements for ONCat"
dynamic = ["version", "dependencies", "optional-dependencies"]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "GPL-3.0" }

[project.urls]
homepage = "https://github.com/neutrons/pyoncatqt/"

[build-system]
requires = ["setuptools", "wheel", "toml", "versioningit"]
build-backend = "setuptools.build_meta"

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.1"

[tool.versioningit.next-version]
method = "minor"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}"
dirty = "{version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+d{build_date:%Y%m%d%H%M}"

[tool.versioningit.write]
file = "src/pyoncatqt/_version.py"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
"*" = ["*.yml","*.yaml","*.ini"]

[project.gui-scripts]
pyoncatqt = "pyoncatqt.pyoncatqt:gui"

[tool.pytest.ini_options]
pythonpath = [".", "src"]
testpaths = ["tests"]
python_files = ["test*.py"]
norecursedirs = [".git", "tmp*", "_tmp*", "__pycache__", "*dataset*", "*data_set*"]

[tool.coverage.report]
exclude_lines = [
    "except ImportError:",
    "except ModuleNotFoundError:",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# https://beta.ruff.rs/docs/rules/
select = ["A", "ARG", "BLE", "E", "F", "I", "PT", "ANN"]
ignore = ["F403", "F405", "F401", # wild imports and  unknown names
]
