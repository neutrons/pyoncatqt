name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa, main]
    tags: ['v*']

jobs:
  conda-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,defaults,oncat,mantid/label/nightly
          mamba-version: "*"
          environment-file: environment.yml
          cache-environment-key: ${{ runner.os }}-env-${{ hashFiles('**/environment.yml') }}
          cache-downloads-key: ${{ runner.os }}-downloads-${{ hashFiles('**/environment.yml') }}
      - name: build python wheel
        shell: bash -l {0}
        run: |
          python -m build --wheel --no-isolation
      - name: build conda package
        run: |
          # set up environment
          cd conda.recipe
          echo "versioningit $(versioningit ../)"
          # build the package
          VERSION=$(versioningit ../) conda mambabuild --channel conda-forge --output-folder . .
          conda verify noarch/pyoncatqt*.tar.bz2
      - name: upload conda package to anaconda
        shell: bash -l {0}
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          IS_RC: ${{ contains(github.ref, 'rc') }}
        run: |
          # label is main or rc depending on the tag-name
          CONDA_LABEL="main"
          if [ "${IS_RC}" = "true" ]; then CONDA_LABEL="rc"; fi
          echo pushing ${{ github.ref }} with label $CONDA_LABEL
          anaconda upload --label $CONDA_LABEL conda.recipe/noarch/pyoncatqt*.tar.bz2

  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,defaults
          mamba-version: "*"
          environment-file: environment.yml
          cache-environment-key: ${{ runner.os }}-env-${{ hashFiles('**/environment.yml') }}
          cache-downloads-key: ${{ runner.os }}-downloads-${{ hashFiles('**/environment.yml') }}
      - name: install
        run: |
          python -m pip install -e .
      - name: run unit tests
        run: |
          echo "running unit tests"
          xvfb-run --server-args="-screen 0 1920x1080x24" -a python -m pytest --cov=src --cov-report=xml --cov-report=term-missing
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
